export { authenticate, getSession, signOut, verifyAgentToken, createSessionCookie, clearSessionCookie, type AuthConfig, type Session, type MCPLoginPayload, type AuthenticateResult, } from "./core";
export { google, type GoogleProviderOptions } from "./providers/google";
export { email, type EmailProviderOptions } from "./providers/email";
export { facebook, type FacebookProviderOptions } from "./providers/facebook";
export { github, type GitHubProviderOptions } from "./providers/github";
export { gitlab, type GitLabProviderOptions } from "./providers/gitlab";
export { linkedin, type LinkedInProviderOptions } from "./providers/linkedin";
export { microsoft, type MicrosoftProviderOptions } from "./providers/microsoft";
export { spotify, type SpotifyProviderOptions } from "./providers/spotify";
export { discord, type DiscordProviderOptions } from "./providers/discord";
export { twitch, type TwitchProviderOptions } from "./providers/twitch";
export { epic, type EpicProviderOptions } from "./providers/epic";
export { custom, type CustomProviderOptions } from "./providers/custom";
export type { Provider, OAuthProviderConfig, EmailProviderConfig, } from "./providers/types";
export { prismaAdapter } from "./adapters/prisma";
export type { Adapter } from "./adapters/types";
export { createMCPTools, isTokenRevoked } from "./mcp/mcp";
export { createMCPShield, type MCPShieldConfig } from "./shield/mcpShield";
export type { WarpyConfig, ShieldMetricsConfig } from "./shield/types";
export { signJWT, verifyJWT, decodeJWT, type JWTPayload } from "./utils/jwt";
export { serializeCookie, parseCookies, getSessionCookie, clearCookie, SESSION_COOKIE_NAME, } from "./utils/cookie";
export { generateCSRFToken, validateCSRFToken, cleanExpiredTokens, } from "./utils/csrf";
export { generateSecureToken, createMagicToken, verifyMagicToken, cleanExpiredMagicTokens, } from "./utils/tokens";
export { OAuthProvider } from "./utils/oauth";
export { createNextAuthHandler, type NextAuthHandlerOptions, } from "./next/handler";
